{"version":3,"sources":["components/Machines.tsx","components/SingleCard.tsx","App.tsx","index.tsx"],"names":["Categories","data","onChangeCategory","useState","id","selected","setSelected","useEffect","category","find","item","length","onChange","e","Number","parseInt","target","value","map","key","name","SingleCard","selectedData","App","getData","selectedCategory","SelectCategory","isLoading","setIsLoading","fetchProducts","a","Axios","get","response","console","log","Fragment","className","rootElement","document","getElementById","render"],"mappings":"uQAqCeA,EA1BwB,SAAC,GAAgC,IAAD,EAA7BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAE9C,EAAgCC,mBAAQ,UAASF,EAAK,UAAd,aAAS,EAASG,IAA1D,mBAAOC,EAAP,KAAiBC,EAAjB,KAKA,GAJAC,qBAAU,WACR,IAAMC,EAAWP,EAAKQ,MAAK,SAACC,GAAD,OAAUA,EAAMN,KAAOC,KAClDH,EAAiBM,KAChB,CAACP,EAAMI,KACLJ,EAAKU,OACR,OAAO,8BAOT,OACE,4BAAQC,SALW,SAACC,GACpBP,EAAYQ,OAAOC,SAASF,EAAEG,OAAOC,UAKlChB,EAAKiB,KAAI,SAACV,GAAD,OACR,4BAAQW,IAAKX,EAASJ,GAAIa,MAAOT,EAASJ,IACvCI,EAASY,WCTLC,EAd0B,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC3C,OAAIA,EAID,6BACI,6BACE,yBAAKH,IAAKG,EAAalB,KACvB,oCAAUkB,EAAaF,QANrB,+B,MCAG,SAASG,IAEtB,MAAwBpB,mBAAsB,IAA9C,mBAAOF,EAAP,KAAauB,EAAb,KACA,EAA2CrB,mBAAoBF,EAAK,IAApE,mBAAOwB,EAAP,KAAyBC,EAAzB,KACA,EAAkCvB,oBAAkB,GAApD,mBAAOwB,EAAP,KAAkBC,EAAlB,KAMMC,EAAa,uCAAG,4BAAAC,EAAA,6DAEpBF,GAAa,GAFO,SAGGG,IAAMC,IAC3B,kCAJkB,OAGdC,EAHc,OAMpBT,EAAQS,EAAShC,MACjB2B,GAAa,GAPO,2CAAH,qDAgBnB,OANArB,qBAAU,WAEN2B,QAAQC,IAAI,oBACdN,MACA,IAGA,kBAAC,IAAMO,SAAP,KACE,yBAAKC,UAAU,OACb,iDACA,uEACA,kBAAC,EAAD,CAAYnC,iBAzBK,SAACuB,GACtBC,EAAeD,IAwBmCxB,KAAMA,KAClD0B,GAAY,kBAAC,EAAD,CAAYL,aAAcG,MCpChD,IAAMa,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,gBAAClB,EAAD,MAASe,K","file":"static/js/main.1c054173.chunk.js","sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\r\n\r\nexport interface IMachinesProps {\r\n  onChangeCategory: (data: IMachines) => void;\r\n  data: IMachines[];\r\n}\r\nexport interface IMachines {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nconst Categories: FC<IMachinesProps> = ({ data, onChangeCategory }) => {\r\n    debugger\r\n  const [selected, setSelected] = useState<number>(data[0]?.id);\r\n  useEffect(() => {\r\n    const category = data.find((item) => item!.id === selected);\r\n    onChangeCategory(category!);\r\n  }, [data, selected]);\r\n  if (!data.length) {\r\n    return <div></div>;\r\n  }\r\n\r\n  const handleSelcet = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelected(Number.parseInt(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <select onChange={handleSelcet}>\r\n      {data.map((category: any) => (\r\n        <option key={category.id} value={category.id}>\r\n          {category.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { FC} from \"react\";\r\nimport { IMachines } from \"./Machines\";\r\n\r\ninterface ISingleCardProps {\r\n  selectedData: IMachines;\r\n}\r\n\r\nconst SingleCard: FC<ISingleCardProps> = ({ selectedData }) => {\r\n if(!selectedData){\r\n     return(<div></div>)\r\n }\r\n  return (\r\n    <div>\r\n        <div>\r\n          <div key={selectedData.id}></div>\r\n          <p>Name: {selectedData.name}</p>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleCard;\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Categories, {\r\n  IMachinesProps,\r\n  IMachines,\r\n} from \"./components/Machines\";\r\nimport SingleCard from \"./components/SingleCard\";\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  debugger;\r\n  const [data, getData] = useState<IMachines[]>([]);\r\n  const [selectedCategory, SelectCategory] = useState<IMachines>(data[0]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const changeCategory = (selectedCategory: IMachines) => {\r\n    SelectCategory(selectedCategory);\r\n  };\r\n\r\n  const fetchProducts = async () => {\r\n    debugger;\r\n    setIsLoading(true);\r\n    const response = await Axios.get(\r\n      \"http://localhost:5000/machines\"\r\n    );\r\n    getData(response.data as IMachines[]);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n      debugger\r\n      console.log('useeffeeeeeeeect')\r\n    fetchProducts();\r\n  },[]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"App\">\r\n        <h1>Hello CodeSandbox</h1>\r\n        <h2>Start editing to see some magic happen!</h2>\r\n        <Categories onChangeCategory={changeCategory} data={data} />\r\n        {!isLoading &&<SingleCard selectedData={selectedCategory}></SingleCard>}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}